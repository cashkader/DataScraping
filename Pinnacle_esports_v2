#! python3

from selenium import webdriver
import time, schedule, smtplib

driver = webdriver.Chrome(executable_path=r'C:\Users\Markos\MyPythonScripts\chromedriver.exe')
email = 
password = 
url = 'https://www.soprm6502.com/en/esports/leagues'
select = input('Type smth for new, press enter for added: ')

driver.get(url)

def fi(league):
    try:
        driver.find_element_by_css_selector(league).text
    except:
        return False
    
def ffi(league):
    if fi(league) != False:
        return driver.find_element_by_css_selector(league).text
    
def new(i):
    return ffi('#root > div > div > div.style_container__2vrF6 > main > div > div > div:nth-child(2) > div:nth-child(2) > ul > li:nth-child('+str(i)+') > div > a > label > span')

def add(i):
    return ffi('#root > div > div > div.style_container__2vrF6 > main > div > div > div:nth-child(2) > div:nth-child(2) > ul > li:nth-child('+str(i)+') > div > a > span')

terminate = False
num_games = None
def Notify():
    leagues_list = []
    for i in range (1,100):
        if new(i) is not None:
            leagues_list.append(new(i))
            if new(i) == 'FIFA - Liga Pro (12 mins)':
                global num_games
                num_games = add(i)
                break
        else:
            break
    if 'FIFA - Liga Pro (12 mins)' in leagues_list:      
        if bool(select):
            print (select)
            conn = smtplib.SMTP('smtp.gmail.com', 587)
            conn.ehlo()
            conn.starttls()
            conn.login(email, password)
            conn.sendmail(email, email, 'Subject: FIFA new games in Pinnacle\n\n ')
            global terminate
            terminate = True
        else:
            if add(i) <= num_games:
                num_games = add(i)
                print (num_games)
            else:
                conn = smtplib.SMTP('smtp.gmail.com', 587)
                conn.ehlo()
                conn.starttls()
                conn.login(email, password)
                conn.sendmail(email, email, 'Subject: FIFA added games in Pinnacle\n\n ')
                terminate = True
                        
schedule.every(1).minutes.do(Notify)

while not terminate:
    schedule.run_pending()
    time.sleep(1)
